AWSTemplateFormatVersion: "2010-09-09"

Description: >
    Alan Riddle / Udacity 2019 Cloud DevOps / Project 2
    This template deploys a VPC.

Parameters:
    EnvironmentName:
        Description: An environment name that will be prepended to resources.
        Type: String


    VpcCIDR:
        Description: Please enter the IP Address range for this VPC.
        Type: String
        Default: 10.0.0.0/16

    PublicSubnet1CIDR:
        Description: First public subnet
        Type: String

    PublicSubnet2CIDR:
        Description: Second public subnet
        Type: String

    PrivateSubnet1CIDR:
        Description: First private subnet
        Type: String

    PrivateSubnet2CIDR:
        Description: Second private subnet
        Type: String

Resources:
    VPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcCIDR
            EnableDnsHostnames: true
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName

    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName

    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref VPC

    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PublicSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags: 
                -   Key: Name
                    Value: !Sub ${EnvironmentName} Public Subnet (AZ1)
    
    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref PublicSubnet2CIDR
            MapPublicIpOnLaunch: true
            Tags: 
                -   Key: Name
                    Value: !Sub ${EnvironmentName} Public Subnet (AZ2)

    PrivateSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PrivateSubnet1CIDR
            MapPublicIpOnLaunch: false
            Tags: 
                -   Key: Name
                    Value: !Sub ${EnvironmentName} Private Subnet (AZ1)
    
    PrivateSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref PrivateSubnet2CIDR
            MapPublicIpOnLaunch: false
            Tags: 
                -   Key: Name
                    Value: !Sub ${EnvironmentName} Private Subnet (AZ2)

    NatGatewayEIP1:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: VPC

    NatGatewayEIP2:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: VPC

    NatGateway1:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NatGatewayEIP1.AllocationId
            SubnetId: !Ref PublicSubnet1

    NatGateway2:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NatGatewayEIP2.AllocationId
            SubnetId: !Ref PublicSubnet2

    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            Tags: 
                -   Key: Name
                    Value: !Sub ${EnvironmentName} Public Routes
            VpcId: !Ref VPC

    DefaultPublicRoute:
        Type: AWS::EC2::Route
        DependsOn: InternetGatewayAttachment
        Properties:
            RouteTableId:  !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    PublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet1

    PublicSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet2

    PrivateRouteTable1:
        Type: AWS::EC2::RouteTable
        Properties:
            Tags: 
                -   Key: Name
                    Value: !Sub ${EnvironmentName} Private Routes (AZ1)
            VpcId: !Ref VPC

    PrivateRouteTable2:
        Type: AWS::EC2::RouteTable
        Properties:
            Tags: 
                -   Key: Name
                    Value: !Sub ${EnvironmentName} Private Routes (AZ2)
            VpcId: !Ref VPC

    DefaultPrivateRoute1:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId:  !Ref PrivateRouteTable1
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway1

    DefaultPrivateRoute2:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId:  !Ref PrivateRouteTable2
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway2

    PrivateSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            SubnetId: !Ref PrivateSubnet1

    PrivateSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            SubnetId: !Ref PrivateSubnet2

#Outputs:
#
#    VPC:
#        Description: A reference to the created VPC
#        Value: !Ref VPC
#        Export:
#            Name: !Sub ${EnvironmentName}-VPCID
#
#    VPCPublicRouteTable:
#        Description: Public Routing
#        Value: !Ref PublicRouteTable
#        Export:
#            Name: !Sub ${EnvironmentName}-PUB-RT
#
#    VPCPrivateRouteTable2:
#        Description: Route Table for Private Subnet 2
#        Value: !Ref PrivateRouteTable2
#        Export:
#            Name: !Sub ${EnvironmentName}-PRIV-RT-2


